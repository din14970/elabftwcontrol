name: build

on:
  push:
    branches:
      - master
  pull_request:
     branches:
      - master

jobs:
  build-and-test:
    name: ${{ matrix.os }}/py${{ matrix.python-version }}/poetry
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev,test

      - name: Install project
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest --cov=src tests/

      - name: Generate line coverage
        run: |
          source .venv/bin/activate
          coverage report --show-missing

      - name: Upload coverage to Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true

  coveralls-finish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true
