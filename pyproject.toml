[project]
name = "elabftwcontrol"
dynamic = ["version"]
license = {file = "LICENCE"}
description = "Package for easily interacting with eLabFTW data from the cli and in Python"
authors = [
  {name = "Niels Cautaerts", email = "niels.cautaerts@vito.be"},
]
readme = "README.md"
keywords = ["science", "lab notebooks", "data management"]
classifiers = [
  "Topic :: Scientific/Engineering",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "elabapi-python ~= 5.0",
  "pydantic ~= 2.4",
  "pandas ~= 2.0",
  "typer ~= 0.9",
  "tabulate ~= 0.9",
  "pyyaml ~= 6.0",
]
requires-python = ">= 3.10"

[project.urls]
Repository = "https://github.com/din14970/elabftwcontrol"

[project.scripts]
elabftwctl = "elabftwcontrol.cli:main"

[project.optional-dependencies]
excel = [
  "openpyxl ~= 3.1",
  "xlsxwriter ~= 3.2",
]
aws = [
  "awswrangler ~= 3.7",
  "s3fs >= 2024.3",
]

[dependency-groups]
dev = [
  "types-tabulate",
  "ipykernel",
  "types-pyyaml",
  "pandas-stubs",
  "types-pytz",
]
lint = [
  "ruff",
  "mypy",
]
format = [
  "black",
  "isort",
]
test = [
  "pytest",
  "pytest-cov",
  "pytest-skip-slow",
  "coverage[toml]",
]
lsp = [
  "pynvim",
  "python-lsp-server",
  "pylsp-mypy",
  "python-lsp-ruff",
  "python-lsp-black",
]

[build-system]
requires = [
  "setuptools >= 74",
  "setuptools-scm[toml] >= 8",
  "wheel",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = false
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--import-mode=importlib"
testpaths = [
    "tests",
]

[tool.coverage.run]
relative_files = true
